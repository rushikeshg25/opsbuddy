// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: ingestion.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IngestEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestEventResponse) Reset() {
	*x = IngestEventResponse{}
	mi := &file_ingestion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestEventResponse) ProtoMessage() {}

func (x *IngestEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ingestion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestEventResponse.ProtoReflect.Descriptor instead.
func (*IngestEventResponse) Descriptor() ([]byte, []int) {
	return file_ingestion_proto_rawDescGZIP(), []int{0}
}

func (x *IngestEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type IngestEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*LogEntry            `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	ServiceId     string                 `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	AuthToken     string                 `protobuf:"bytes,3,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestEventRequest) Reset() {
	*x = IngestEventRequest{}
	mi := &file_ingestion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestEventRequest) ProtoMessage() {}

func (x *IngestEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ingestion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestEventRequest.ProtoReflect.Descriptor instead.
func (*IngestEventRequest) Descriptor() ([]byte, []int) {
	return file_ingestion_proto_rawDescGZIP(), []int{1}
}

func (x *IngestEventRequest) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *IngestEventRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *IngestEventRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     string                 `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_ingestion_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ingestion_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_ingestion_proto_rawDescGZIP(), []int{2}
}

func (x *LogEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_ingestion_proto protoreflect.FileDescriptor

const file_ingestion_proto_rawDesc = "" +
	"\n" +
	"\x0fingestion.proto\x12\x16opsbuddy.sdk.ingestion\"/\n" +
	"\x13IngestEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x88\x01\n" +
	"\x12IngestEventRequest\x124\n" +
	"\x04logs\x18\x01 \x03(\v2 .opsbuddy.sdk.ingestion.LogEntryR\x04logs\x12\x1d\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tR\tserviceId\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x03 \x01(\tR\tauthToken\"B\n" +
	"\bLogEntry\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\tR\ttimestamp\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2}\n" +
	"\x10IngestionService\x12i\n" +
	"\x0eIngestLogBatch\x12*.opsbuddy.sdk.ingestion.IngestEventRequest\x1a+.opsbuddy.sdk.ingestion.IngestEventResponseB\tZ\a./protob\x06proto3"

var (
	file_ingestion_proto_rawDescOnce sync.Once
	file_ingestion_proto_rawDescData []byte
)

func file_ingestion_proto_rawDescGZIP() []byte {
	file_ingestion_proto_rawDescOnce.Do(func() {
		file_ingestion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ingestion_proto_rawDesc), len(file_ingestion_proto_rawDesc)))
	})
	return file_ingestion_proto_rawDescData
}

var file_ingestion_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ingestion_proto_goTypes = []any{
	(*IngestEventResponse)(nil), // 0: opsbuddy.sdk.ingestion.IngestEventResponse
	(*IngestEventRequest)(nil),  // 1: opsbuddy.sdk.ingestion.IngestEventRequest
	(*LogEntry)(nil),            // 2: opsbuddy.sdk.ingestion.LogEntry
}
var file_ingestion_proto_depIdxs = []int32{
	2, // 0: opsbuddy.sdk.ingestion.IngestEventRequest.logs:type_name -> opsbuddy.sdk.ingestion.LogEntry
	1, // 1: opsbuddy.sdk.ingestion.IngestionService.IngestLogBatch:input_type -> opsbuddy.sdk.ingestion.IngestEventRequest
	0, // 2: opsbuddy.sdk.ingestion.IngestionService.IngestLogBatch:output_type -> opsbuddy.sdk.ingestion.IngestEventResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ingestion_proto_init() }
func file_ingestion_proto_init() {
	if File_ingestion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ingestion_proto_rawDesc), len(file_ingestion_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ingestion_proto_goTypes,
		DependencyIndexes: file_ingestion_proto_depIdxs,
		MessageInfos:      file_ingestion_proto_msgTypes,
	}.Build()
	File_ingestion_proto = out.File
	file_ingestion_proto_goTypes = nil
	file_ingestion_proto_depIdxs = nil
}
